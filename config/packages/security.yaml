framework:
    rate_limiter:
        # define 2 rate limiters (one for username+IP, the other for IP)
        username_ip_login:
            policy: token_bucket
            limit: 5
            rate: { interval: "5 minutes" }

        ip_login:
            policy: sliding_window
            limit: 50
            interval: "15 minutes"

services:
    # our custom login rate limiter
    app.login_rate_limiter:
        class: Symfony\Component\Security\Http\RateLimiter\DefaultLoginRateLimiter
        arguments:
            # globalFactory is the limiter for IP
            $globalFactory: "@limiter.ip_login"
            # localFactory is the limiter for username+IP
            $localFactory: "@limiter.username_ip_login"

security:
    # Enables the new Symfony Security system based on Authenticators, all used authenticators must support this before enabling this.
    enable_authenticator_manager: true
    access_decision_manager:
        strategy: affirmative
        service: ~
        allow_if_all_abstain: false
        allow_if_equal_granted_denied: true
    # encoders:
    #     legacy_bcrypt:
    #         algorithm: bcrypt
    #     App\Entity\User:
    #         algorithm: sodium
    #         migrate_from:
                # allow existing bcrypt accounts to log in
                # and migrate to sodium
                # - legacy_bcrypt

    password_hashers:
        # Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # anonymous: true
            provider: app_user_provider
            lazy: true
            entry_point: form_login
            login_throttling:
                limiter: app.login_rate_limiter
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                username_parameter: email
                password_parameter: password
                always_use_default_target_path: true
            # guard:
            #     authenticators:
            #         - App\Security\UserAuthenticator
            logout:
                path: app_logout
                target: /
            

    # access_control:
    #     - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    #     - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    #     - { path: ^/*, roles: ROLE_ADMIN }
